{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { toggleTodo } from \"../actions\";\nimport { TodoList } from \"../components.TodoList\";\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos;\n\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed);\n\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed);\n\n    default:\n      throw new Error('unknown filter: ' + filter);\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos.state.visiblityFilter)\n});\n\nconst mapDispatchToProps = {\n  onTodoClick: toggleTodo\n};\nconst visibleTodoList = connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default visibleTodoList;","map":{"version":3,"sources":["/home/rails/Desktop/abc/my-app/src/containers/VisibleTodoList.js"],"names":["connect","toggleTodo","TodoList","getVisibleTodos","todos","filter","t","completed","Error","mapStateToProps","state","visiblityFilter","mapDispatchToProps","onTodoClick","visibleTodoList"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AACxC,UAAOA,MAAP;AACI,SAAK,UAAL;AACI,aAAOD,KAAP;;AACJ,SAAK,gBAAL;AACI,aAAOA,KAAK,CAACC,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,SAApB,CAAP;;AACJ,SAAK,aAAL;AACI,aAAOH,KAAK,CAACC,MAAN,CAAaC,CAAC,IAAI,CAACA,CAAC,CAACC,SAArB,CAAP;;AACJ;AACI,YAAM,IAAIC,KAAJ,CAAU,qBAAqBH,MAA/B,CAAN;AARR;AAUH,CAXD;;AAaA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,KAAK,EAAED,eAAe,CAACO,KAAK,CAACN,KAAN,CAAcM,KAAd,CAAoBC,eAArB;AADY,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAG;AAC3BC,EAAAA,WAAW,EAAEZ;AADc,CAA3B;AAIA,MAAMa,eAAe,GAAGd,OAAO,CAC3BS,eAD2B,EAE3BG,kBAF2B,CAAP,CAGtBV,QAHsB,CAAxB;AAKA,eAAeY,eAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { toggleTodo } from \"../actions\";\nimport { TodoList } from \"../components.TodoList\";\n\nconst getVisibleTodos = (todos , filter) => {\n    switch(filter){\n        case 'SHOW_ALL':\n            return todos\n        case 'SHOW_COMPLETED':\n            return todos.filter(t => t.completed) \n        case 'SHOW_ACTIVE':\n            return todos.filter(t => !t.completed) \n        default:\n            throw new Error('unknown filter: ' + filter)  \n    }\n}\n\nconst mapStateToProps = (state) => ({\n  todos: getVisibleTodos(state.todos . state.visiblityFilter)\n        })\nconst mapDispatchToProps = {\nonTodoClick: toggleTodo\n}\n \nconst visibleTodoList = connect(\n    mapStateToProps,\n    mapDispatchToProps \n)(TodoList)\n\nexport default visibleTodoList;"]},"metadata":{},"sourceType":"module"}